name: Clean up deployments
run-name: Delete stale deployments

on:
  workflow_dispatch:
  schedule:
    # Every weekday at 10am
    - cron: "0 10 * * 1-5"

permissions:
  id-token: write
  contents: read

concurrency: cleanup-dev-${{ github.head_ref || github.ref_name }}

jobs:
  get-stale-stacks:
    name: Get stale stacks
    runs-on: ubuntu-latest
    environment: development
    outputs:
      stacks: ${{ steps.get-stacks.outputs.stack-names-json }}
    steps:
      - name: Get stale preview stacks
        uses: govuk-one-login/github-actions/sam/get-stale-stacks@d201191485b645ec856a34e5ca48636cf97b2574
        id: get-stacks
        with:
          aws-role-arn: ${{ vars.DEPLOYMENT_ROLE_ARN }}
          threshold-days: 14
          stack-name-filter: st
          stack-tag-filters: |
            cri:deployment-source=github-actions
            cri:stack-type=preview
          description: preview

  delete-stacks:
    name: Delete ${{ matrix.stack }}
    needs: get-stale-stacks
    runs-on: ubuntu-latest
    environment: development
    if: ${{ needs.get-stale-stacks.outputs.stacks != '[]' }}
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        stack: ${{ fromJSON(needs.get-stale-stacks.outputs.stacks) }}
    steps:
      - name: Delete stack
        uses: govuk-one-login/github-actions/sam/delete-stacks@d201191485b645ec856a34e5ca48636cf97b2574
        with:
          aws-role-arn: ${{ vars.DEPLOYMENT_ROLE_ARN }}
          stack-names: ${{ matrix.stack }}
          empty-buckets: true
          verbose: true
